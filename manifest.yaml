id: ipfs-podcasting 
title: "IPFS Podcasting Node"
version: 0.6.9.1
release-notes: "Initial Release for Start9/embassyOS"
license: gpl-3.0
wrapper-repo: "https://github.com/Cameron-IPFSPodcasting/podcastnode-Start9-wrapper"
upstream-repo: "https://github.com/Cameron-IPFSPodcasting/podcastnode-Start9"
support-site: "https://github.com/Cameron-IPFSPodcasting/podcastnode-Start9/issues"
marketing-site: "https://IPFSPodcasting.net/"
build: ["make"]

description:
  short: Crowd-host podcasts over IPFS
  long: |
    Run an IPFS node for self-hosting, crowd-hosting, and archiving of your favorite podcasts to the IPFS network. This service utilizes IPFSPodcasting.net to manage & track podcast episodes, and generate RSS feeds that load media from the IPFS network. Optionally configure your email to manage your node from the website.

assets:
  license: LICENSE
  icon: ipfspod.svg
  instructions: instructions.md

#docker-images: image.tar

main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /ipfs-podcasting/ipfs
    cfg: /ipfs-podcasting/cfg

#health-checks:
#  web-ui:
#    name: Web Interface
#    success-message: The Ghost UI is accessible
#    type: script

#For IPFS - Optional Email address - stored in comfig.yaml somewhere???
config:
  get:
   type: script
  set:
    type: script

#For IPFS - Show IPFS ID, Show Peers, Show Storage, Show Network (HTTP, HTTPS, IPFS Health Check?)
#properties:
#  type: script
#dependencies: {}

volumes:
  main:
    type: data
  cfg:
    type: data

interfaces:
  main:
    name: IPFS Podcasting UI
    description: View log, configure email, run garbage collection, reset
    tor-config:
      port-mapping:
        80: "8675"
    lan-config:
      8675: 8675
    ui: true
    protocols:
      - tcp
      - http
  ipfs:
    name: IPFS
    description: Port 4001 for IPFS network communication
    tor-config:
      port-mapping:
        4001: "4001"
    lan-config:
      4001: 4001
    ui: false
    protocols:
      - tcp
  mgmt:
    name: IPFS UI
    description: Port 5001 for native IPFS UI
    tor-config:
      port-mapping:
        5001: "5001"
    lan-config:
      5001: 5001
    ui: false
    protocols:
      - tcp

backup:
  create:
    type: docker
    image: compat
    system: true 
    entrypoint: compat 
    args:
      - duplicity
      - create
      - /mnt/backup
      - /ipfs-podcasting/cfg
    mounts:
      BACKUP: "/mnt/backup" 
      main: "/ipfs-podcasting/cfg"
    io-format: yaml
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /ipfs-podcasting/cfg
    mounts:
      BACKUP: "/mnt/backup"
      main: "/ipfs-podcasting/cfg"
    io-format: yaml

#For IPFS - Garbage Collection
actions:
  cleanup:
    name: "Clean Up"
    description: "Runs garbage collection to clean up the IPFS datastore. This will remove old files that have been unpinned from IPFS. Favorite feeds & episodes will remain."
#   warning: There is no warning. Future versions of the service will automatically run garbage collection when necessary.
    allowed-statuses:
      - running
      - stopped
    implementation:
      type: docker
      image: main
      system: false
      entrypoint: gc.sh
      args: []
      mounts:
        main: /ipfs-podcasting/ipfs
      io-format: json

migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
